#########################
# Project Configuration #
#########################

# Project name and version needed to run tests

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "hdx-scraper-pcodes"
requires-python = ">=3.12"
dependencies = [
  "hdx-python-api",
  "hdx-python-utilities",
  "pandas",
]

dynamic = ["version"]

[project.optional-dependencies]
test = [
  "pytest",
  "pytest-cov"
]
dev = ["pre-commit"]

#########
# Hatch #
#########

# Build

[tool.hatch.build.targets.wheel]
packages = ["src/hdx"]

[tool.hatch.build.hooks.vcs]
version-file = "src/hdx/scraper/pcodes/_version.py"

[tool.hatch.metadata]
allow-direct-references = true

# Versioning

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"
version_scheme = "python-simplified-semver"

# Tests

[tool.hatch.envs.hatch-test]
features = ["test"]

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.12"]

[tool.hatch.envs.hatch-test.scripts]
run = """
       pytest -c .config/pytest.ini --rootdir=. --junitxml=test-results.xml \
       --cov --cov-config=.config/coveragerc --no-cov-on-fail \
       --cov-report=lcov --cov-report=term-missing
       """

[tool.hatch.envs.hatch-static-analysis.scripts]
format-check = ["ruff format --config .config/ruff.toml --check --diff {args:.}",]
format-fix = ["ruff format --config .config/ruff.toml {args:.}",]
lint-check = ["ruff check --config .config/ruff.toml {args:.}",]
lint-fix = ["ruff check --config .config/ruff.toml --fix {args:.}",]
